---
- name: "Create job header and inventory"
  hosts: localhost
  roles:
    - role: emit-job-header
    - log-inventory

- name: "Setup Zuul environment"
  hosts: all
  roles:
    - start-zuul-console
  tasks:
    - block:
        # Regular VM
        - ansible.builtin.include_role:
            name: add-build-sshkey
        - ansible.builtin.include_role:
            name: validate-host
        - ansible.builtin.include_role:
            name: prepare-workspace
        - ansible.builtin.include_role:
            name: ensure-output-dirs
            
        # Some roles are not doing `apt update` and thus not able to install
        # required packages.
        - name: Update APT cache  # noqa no-handler
          become: true
          ansible.builtin.apt:
            update_cache: yes
          when:
            - "ansible_os_family == 'Debian'"
      when: "ansible_connection != 'kubectl'"

    - block:
        # A pod way
        - ansible.builtin.include_role:
            name: prepare-workspace-openshift
        - ansible.builtin.include_role:
            name: remove-zuul-sshkey
        - ansible.builtin.include_role:
            name: ensure-output-dirs
      run_once: true
      when: "ansible_connection == 'kubectl'"

# If there is a registered role (as constructed from project name) try to
# generate secret-id and leave it at well-known location. The job is then
# responsible to take it and use. Secret is wrapped with ttl set to job
# timeout. Try to do so only if there is zuul_vault variable with role_id set
# in (We do not use role_id, but just presence).
- name: "Prepare Vault access"
  hosts: localhost
  tasks:

    - name: "Create AppRole vault secret when necessary"
      ansible.builtin.include_role:
        name: "create-vault-approle-secret"
      vars:
        vault_addr: "{{ zuul_vault_addr }}"
        vault_token: "{{ lookup('file', zuul_base_vault_token_path) }}"
        vault_secret_dest: "{{ zuul.executor.work_root }}/.approle-secret"
        vault_role_name: "{{ ['zuul', zuul.tenant, zuul.project.name] | join('_') | regex_replace('/', '_') | lower }}"
      when:
        - "zuul.post_review | bool"
        - "zuul_vault_addr is defined"
        - "zuul_base_vault_token_path is defined"
        - "zuul_vault is defined and zuul_vault.vault_role_id is defined"
