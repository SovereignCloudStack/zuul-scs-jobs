---
- name: Create temp directory
  ansible.builtin.tempfile:
    state: directory
  register: ensure_trivy_archive_tempdir

- name: Get GitHub release info
  ansible.builtin.uri:
    url: "{{ ensure_trivy_release_info_url_prefix }}/{{ (ensure_trivy_version == 'latest') | ternary(ensure_trivy_version, ensure_trivy_tag) }}"
    headers:
      accept: "application/json"
  register: ensure_trivy_release_info

- name: Download {{ ensure_trivy_name }} checksums
  ansible.builtin.uri:
    url: "{{ ensure_trivy_download_prefix }}/{{ ensure_trivy_release_info.json.tag_name }}/{{ ensure_trivy_name }}_{{ ensure_trivy_release_info.json.tag_name | regex_replace('^v', '') }}_checksums.txt"
    return_content: true
  register: ensure_trivy_checksums

- name: Download {{ ensure_trivy_name }} archive
  ansible.builtin.get_url:
    url: "{{ ensure_trivy_download_prefix }}/{{ ensure_trivy_release_info.json.tag_name }}/{{ ensure_trivy_name }}_{{ ensure_trivy_release_info.json.tag_name | regex_replace('^v', '') }}_{{ ensure_trivy_os }}-{{ ensure_trivy_arch }}.tar.gz"
    dest: "{{ ensure_trivy_archive_tempdir.path }}/{{ ensure_trivy_name }}_{{ ensure_trivy_release_info.json.tag_name | regex_replace('^v', '') }}_{{ ensure_trivy_os }}-{{ ensure_trivy_arch }}.tar.gz"
    checksum: "sha256:{{ ensure_trivy_checksums.content | regex_search('(?P<checksum>.*)\\b\\s+'+ensure_trivy_name+'_'+(ensure_trivy_release_info.json.tag_name | regex_replace('^v',''))+'_'+ensure_trivy_os+'-'+ensure_trivy_arch+'.tar.gz', '\\g<checksum>') }}"

- name: Install {{ ensure_trivy_name }}
  ansible.builtin.unarchive:
    src: "{{ ensure_trivy_archive_tempdir.path }}/{{ ensure_trivy_name }}_{{ ensure_trivy_release_info.json.tag_name | regex_replace('^v', '') }}_{{ ensure_trivy_os }}-{{ ensure_trivy_arch }}.tar.gz"
    dest: "{{ ensure_trivy_install_dir }}"
    remote_src: yes
  become: true
